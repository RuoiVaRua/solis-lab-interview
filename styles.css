:root {
	/* fixed size variables for perfect pixel requirement */
	--title-lh: 1.2; /* 18px * 1.2 = 21.6px */
	--text-lh: 1.4; /* 16px * 1.4 = 22.4px */
	/* --xmark-size: 50%; */
	--xmark-size: 12.63px;
	--transition-duration: 0.4s;
	--transition-easing: cubic-bezier(0.4, 0, 0.2, 1);
}

/* general css -- start */
* {
	-webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */
	-moz-box-sizing: border-box; /* Firefox, other Gecko */
	box-sizing: border-box; /* Opera/IE 8+ */
	padding: 0;
	margin: 0;

	font-family: "Open Sans", system-ui, -apple-system, "Segoe UI", Roboto,
		"Helvetica Neue", Arial, sans-serif;
	font-weight: 400 700;
	font-optical-sizing: auto;
	font-style: normal;
	letter-spacing: 0px;
	line-height: 22px;
	color: #000;
}

html,
body {
	block-size: 100%;
	inline-size: 100%;
	font-size: 16px;
	overflow: hidden;
	background-color: #e5e5e5;

	display: flex;
	justify-content: center;
	align-items: center;
}

button {
	border: none;
	outline: none;
	background-color: transparent;
	position: relative;
	touch-action: manipulation;
}

button:hover {
	cursor: pointer;
}
/* general css -- end */

.accordion,
.accordion__block {
	display: flex;
	flex-direction: column;
}

.accordion {
	max-width: 720px;
	row-gap: 20px;
}

.accordion__block {
	padding: 24px;
	background-color: #fff;
	row-gap: 0;
	will-change: row-gap;
	transition: row-gap var(--transition-duration) var(--transition-easing);
}

.accordion__header {
	display: flex;
	align-items: center;
	justify-content: space-between;
}

.accordion__title {
	font-weight: 700;
	font-size: 18px;
	color: #000;
	line-height: var(--title-lh);
}

.accordion__text {
	font-weight: 400;
	font-size: 16px;
	color: #3c3c43;

	/* use line-height, visibility, opacity */
	/* line-height: 0;
	visibility: hidden;
	opacity: 0;
	will-change: line-height, opacity, visibility;
	transition: line-height var(--transition-duration) var(--transition-easing),
		opacity var(--transition-duration) var(--transition-easing),
		visibility var(--transition-duration) var(--transition-easing); */

	/* use max-height with overflow hidden */
	line-height: var(--text-lh);
	overflow: hidden;
	max-height: 0px;
	will-change: max-height;
	transition: max-height var(--transition-duration) var(--transition-easing);
}

.accordion__xmark {
	width: 24px;
	aspect-ratio: 1 / 1;

	position: relative;
}

.accordion__xmark:focus-visible {
	outline: 2px solid currentColor;
	outline-offset: 2px;
}

.accordion__xmark::before,
.accordion__xmark::after {
	content: "";
	background-color: #000;

	position: absolute;
	top: 50%;
	left: 50%;
	will-change: transform;
	/* use translateZ(0) and backface-visibility: hidden 
	help Enable GPU acceleration and Reduce unnecessary flickering or rendering */
	transform: translateZ(0) translate(-50%, -50%);
	backface-visibility: hidden;
	transition: transform var(--transition-duration) var(--transition-easing);
}

.accordion__xmark::before {
	width: 2px;
	/* height: 50%; */
	height: var(--xmark-size);
}

.accordion__xmark::after {
	/* width: 50%; */
	width: var(--xmark-size);
	height: 2px;
}

/* css for items in open block and closed blocks -- start */
.accordion__xmark--open::before,
.accordion__xmark--open::after {
	transform: translateZ(0) translate(-50%, -50%) rotate(45deg) scale(1.175);
}

.accordion__text--open {
	/* use line-height, visibility, opacity */
	/* line-height: var(--text-lh);
	visibility: visible;
	opacity: 1; */

	/* use max-height with overflow hidden */
	/* 1em (font-size) * line-height ratio => pixel of line-height * 2 (number of rows) => pixel of max-height */
	/* max-height: calc(1em * var(--text-lh) * 2);  */
	/* but in reality, the number of text rows is not fixed */
	/* so I use JS to calculate correct max height of each text, and set it to inline style variable */
	max-height: var(--max-height);
}

.accordion__block:has(.accordion__text--open) {
	row-gap: 16px;
}
/* css for items in open block and closed blocks -- end */
